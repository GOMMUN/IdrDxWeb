<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.idr.pdd.mapper.DashMapper">
	
	<select id="findAllName" parameterType="FairProd" resultType="FairProd">
		SELECT A.FACTORYNAME AS FACTORYNAME
		FROM DSP_FACTORY A
		WHERE A.FACTORYID = #{plant}
    </select>
    
    <select id="findAllP" parameterType="FairProd" resultType="FairProd">
		SELECT 
			C.WORK_DATE,
			SUM(C.MANHOUR) AS MANHOUR,
			SUM(C.PROD_QTY) AS PROD_QTY
		FROM (		
			SELECT DISTINCT
				A.WORK_DATE,
				B.MANHOUR,
				B.PROD_QTY
			FROM DSP_WORKDAILY_REPORT A
			LEFT JOIN DSP_WORK_CONTENTS B
			ON A.DATASEQ = B.WORKDAILY_SEQ
				AND B.ISUSABLE = 'Usable'
			WHERE A.WORK_DATE IN (
								CONVERT(DATE, GETDATE(), 112),
								CONVERT(DATE, GETDATE()-1, 112)
								)
				AND A.FACTORYID = #{plant}
				AND A.MATERIALID = #{material}
				AND A.ISUSABLE = 'Usable'
			) C
		GROUP BY C.WORK_DATE 
    </select>

    <select id="findAllQ" parameterType="FairProd" resultType="FairProd">
		SELECT 
			C.WORK_DATE,
			SUM(C.FIRSTTIME_FAIL_QTY) AS FIRSTTIME_FAIL_QTY,
			SUM(C.PROD_QTY) AS PROD_QTY
		FROM (		
			SELECT DISTINCT
				A.WORK_DATE,
				B.FIRSTTIME_FAIL_QTY,
				B.PROD_QTY
			FROM DSP_WORKDAILY_REPORT A
			LEFT JOIN DSP_WORK_CONTENTS B
			ON A.DATASEQ = B.WORKDAILY_SEQ
				AND B.ISUSABLE = 'Usable'
			WHERE A.WORK_DATE IN (
								CONVERT(DATE, GETDATE(), 112),
								CONVERT(DATE, GETDATE()-1, 112)
								)
				AND A.FACTORYID = #{plant}
				AND A.MATERIALID = #{material}
				AND A.ISUSABLE = 'Usable'
			) C
		GROUP BY C.WORK_DATE
    </select>
    
    <select id="findAllC" parameterType="FairProd" resultType="FairProd">
		SELECT 
			R.dt AS WORK_DATE,
			ROUND(CASE 
				WHEN convert(float, (R.WORKTOTAL + R.NOTOPERATETOTAL)) = 0 THEN ROUND((convert(float, R.WORKTOTAL) / 1), 4)*100
				ELSE ROUND((convert(float, R.WORKTOTAL) / convert(float, (R.WORKTOTAL + R.NOTOPERATETOTAL))), 4)*100
			END, 2) AS TOTAL
		FROM (	
			SELECT 
				E.dt,
				SUM(E.WORKTOTAL) AS WORKTOTAL,
				SUM(E.NOTOPERATETOTAL) AS NOTOPERATETOTAL
			FROM (
				SELECT 
					A.dt AS dt,
					SUM(CASE 
					    WHEN (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT)) &lt;= (CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)) 
					    THEN ((CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)) - (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT)))
					    ELSE ((CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)) + (1440 - (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT))))
					END) AS WORKTOTAL,
					ISNULL(SUM(CASE 
					    WHEN (CAST(SUBSTRING(D.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_FROM,3,2) AS INT)) &lt;= (CAST(SUBSTRING(D.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_TO,3,2) AS INT)) 
					    THEN ((CAST(SUBSTRING(D.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_TO,3,2) AS INT)) - (CAST(SUBSTRING(D.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_FROM,3,2) AS INT)))
					    ELSE ((CAST(SUBSTRING(D.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_TO,3,2) AS INT)) + (1440 - (CAST(SUBSTRING(D.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_FROM,3,2) AS INT))))
					END), 0) AS NOTOPERATETOTAL
				FROM CheckDayOff A 
				LEFT JOIN DSP_WORKDAILY_REPORT B 
				ON B.WORK_DATE =A.dt
					AND B.LINEID = #{line}
					AND B.ISUSABLE ='Usable'
					AND B.MATERIALID = #{material}
				LEFT JOIN DSP_WORK_CONTENTS C 
				ON B.DATASEQ =C.WORKDAILY_SEQ
					AND C.ISUSABLE ='Usable'
					AND C.WORKTIME_FROM IS NOT NULL
					AND C.WORKTIME_TO IS NOT NULL
				LEFT JOIN DSP_NOTOPERATE_CONTENTS D
				ON B.DATASEQ =D.WORKDAILY_SEQ
					AND D.ISUSABLE ='Usable'
				WHERE 1=1
				AND A.dt IN (
								CONVERT(DATE, GETDATE(), 112),
								CONVERT(DATE, GETDATE()-1, 112)
								)
				GROUP BY A.dt 
			) E
			GROUP BY E.dt
		) R
		ORDER BY R.dt ASC
    </select>
    
    <select id="findAllD" parameterType="FairProd" resultType="FairProd">
		SELECT 
			C.WORK_DATE,
			SUM(C.PLAN_QTY) AS PLAN_QTY,
			SUM(C.PROD_QTY) AS PROD_QTY
		FROM (		
			SELECT DISTINCT
				A.WORK_DATE,
				A.PLAN_QTY,
				SUM(B.PROD_QTY) AS PROD_QTY
			FROM DSP_WORKDAILY_REPORT A
			LEFT JOIN DSP_WORK_CONTENTS B
			ON A.DATASEQ = B.WORKDAILY_SEQ
				AND B.ISUSABLE = 'Usable'			
			WHERE A.WORK_DATE IN (
								CONVERT(DATE, GETDATE(), 112),
								CONVERT(DATE, GETDATE()-1, 112)
								)
				AND A.FACTORYID = #{plant}
				AND A.MATERIALID = #{material}
				AND A.ISUSABLE = 'Usable'
				AND A.LINEID = (SELECT TOP 1
									LOCATIONID
									FROM DSP_LOCATION
									WHERE FACTORYID = 'KEM'
									AND ISUSABLE = 'Y'
									ORDER BY LOCATIONID DESC
									)
			GROUP BY A.WORK_DATE, A.PLAN_QTY
			) C
		GROUP BY C.WORK_DATE
    </select>
    
	<select id="rank">
		SELECT 
			R.LOCATIONID, 
			SUM(R.PROD_QTY) AS PROD_QTY
		FROM(
			SELECT 
				L.LOCATIONID, 
				ISNULL(SUM(B.PROD_QTY),0) AS PROD_QTY
			FROM
				DSP_LOCATION L
			LEFT JOIN DSP_WORKDAILY_REPORT A 
			ON L.LOCATIONID = A.LINEID
			<choose>
				<when test='month == "day"'>
					AND A.WORK_DATE BETWEEN CONVERT(VARCHAR(8), DATEADD(DAY,-5,GETDATE()),112) AND CONVERT(VARCHAR(8), DATEADD(DAY, 0, GETDATE()),112)
				</when>
				<when test='month == "week"'>
					AND A.WORK_DATE BETWEEN CONVERT(VARCHAR(8),DATEADD(DAY, 1 - DATEPART(DW, CONVERT(DATE,GETDATE()-35)) , CONVERT(DATE,GETDATE()-35)),112) 
								 AND CONVERT(VARCHAR(8),DATEADD(DAY, 7 - DATEPART(DW, CONVERT(DATE,GETDATE())) , CONVERT(DATE,GETDATE())),112)	
				</when>
				<otherwise>
					AND A.WORK_DATE BETWEEN DATEADD(MONTH , DATEDIFF(MONTH, 0, GETDATE()) -5, 0) AND DATEADD(MS, 0, DATEADD(WK, DATEDIFF(WK, 0, GETDATE()), 0))
				</otherwise>
			</choose>
			LEFT JOIN DSP_WORK_CONTENTS B 
			ON A.DATASEQ = B.WORKDAILY_SEQ
			WHERE
				L.FACTORYID = #{plant}
				AND L.ISUSABLE='Y'
			GROUP BY L.LOCATIONID, B.PROD_QTY , A.WORK_DATE
			)R
		GROUP BY R.LOCATIONID
		ORDER BY PROD_QTY DESC, R.LOCATIONID ASC;
	</select>

	<select id="rank2">
		SELECT
			R.LOCATIONID,
			ROUND(CASE 
				WHEN convert(float, (R.WORKTOTAL + R.NOTOPERATETOTAL)) = 0 THEN ROUND((convert(float, R.WORKTOTAL) / 1), 4)*100
				ELSE ROUND((convert(float, R.WORKTOTAL) / convert(float, (R.WORKTOTAL + R.NOTOPERATETOTAL))), 4)*100
			END, 2) AS TOTAL
		FROM(
			SELECT 
				L.LOCATIONID, 
				ISNULL(SUM(CASE 
				    WHEN (CAST(SUBSTRING(B.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(B.WORKTIME_FROM,3,2) AS INT)) &lt;= (CAST(SUBSTRING(B.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(B.WORKTIME_TO,3,2) AS INT)) 
				    THEN ((CAST(SUBSTRING(B.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(B.WORKTIME_TO,3,2) AS INT)) - (CAST(SUBSTRING(B.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(B.WORKTIME_FROM,3,2) AS INT)))
				    ELSE ((CAST(SUBSTRING(B.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(B.WORKTIME_TO,3,2) AS INT)) + (1440 - (CAST(SUBSTRING(B.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(B.WORKTIME_FROM,3,2) AS INT))))
				END), 0) AS WORKTOTAL,
				ISNULL(SUM(CASE 
				    WHEN (CAST(SUBSTRING(C.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.NOTOPERATETIME_FROM,3,2) AS INT)) &lt;= (CAST(SUBSTRING(C.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.NOTOPERATETIME_TO,3,2) AS INT)) 
				    THEN ((CAST(SUBSTRING(C.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.NOTOPERATETIME_TO,3,2) AS INT)) - (CAST(SUBSTRING(C.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.NOTOPERATETIME_FROM,3,2) AS INT)))
				    ELSE ((CAST(SUBSTRING(C.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.NOTOPERATETIME_TO,3,2) AS INT)) + (1440 - (CAST(SUBSTRING(C.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.NOTOPERATETIME_FROM,3,2) AS INT))))
				END), 0) AS NOTOPERATETOTAL
			FROM
				DSP_LOCATION L
			LEFT JOIN DSP_WORKDAILY_REPORT A 
			ON L.LOCATIONID = A.LINEID
				AND A.ISUSABLE='Usable'
				<choose>
					<when test='month == "day"'>
						AND A.WORK_DATE BETWEEN CONVERT(VARCHAR(8), DATEADD(DAY,-5,GETDATE()),112) AND CONVERT(VARCHAR(8), DATEADD(DAY, 0, GETDATE()),112)
					</when>
					<when test='month == "week"'>
						AND A.WORK_DATE BETWEEN CONVERT(VARCHAR(8),DATEADD(DAY, 1 - DATEPART(DW, CONVERT(DATE,GETDATE()-35)) , CONVERT(DATE,GETDATE()-35)),112) 
									 AND CONVERT(VARCHAR(8),DATEADD(DAY, 7 - DATEPART(DW, CONVERT(DATE,GETDATE())) , CONVERT(DATE,GETDATE())),112)	
					</when>
					<otherwise>
						AND A.WORK_DATE BETWEEN DATEADD(MONTH , DATEDIFF(MONTH, 0, GETDATE()) -5, 0) AND DATEADD(MS, 0, DATEADD(WK, DATEDIFF(WK, 0, GETDATE()), 0))
					</otherwise>
				</choose>
			LEFT JOIN DSP_WORK_CONTENTS B 
			ON A.DATASEQ = B.WORKDAILY_SEQ
				AND B.ISUSABLE='Usable'
				AND B.WORKTIME_FROM IS NOT NULL	
				AND B.WORKTIME_TO IS NOT NULL
			LEFT JOIN DSP_NOTOPERATE_CONTENTS C 
			ON A.DATASEQ = C.WORKDAILY_SEQ
				AND C.ISUSABLE='Usable'
			WHERE
				L.FACTORYID = #{plant}
				AND L.ISUSABLE='Y'
				AND L.EQUIPMENTID IS NOT NULL
			GROUP BY L.LOCATIONID
			)R
			ORDER BY 
			ROUND(CASE 
				WHEN convert(float, (R.WORKTOTAL + R.NOTOPERATETOTAL)) = 0 THEN ROUND((convert(float, R.WORKTOTAL) / 1), 4)*100
				ELSE ROUND((convert(float, R.WORKTOTAL) / convert(float, (R.WORKTOTAL + R.NOTOPERATETOTAL))), 4)*100
			END, 2) DESC
	</select>
	
	<select id="chart1" parameterType="FairProd" resultType="FairProd">
		SELECT 
			E.dt,
			E.LINEID,
			SUM(E.PROD_QTY) AS PROD_QTY
		FROM (
			SELECT 
				<choose>
					<when test='month == "day"'>
						A.dt AS dt,
					</when>
					<when test='month == "week"'>
						CAST(CONCAT(DATEPART( MONTH, DATEADD( DAY, ( ( 7 - DATEPART( WEEKDAY, A.dt ) ) % 7 ) - 3, A.dt ) ), '0',( DATEPART( DAY, DATEADD( DAY, ( ( 7 - DATEPART( WEEKDAY, A.dt) ) % 7 ) - 3, A.dt ) ) - 1 ) / 7 + 1) AS INT) AS dt,
					</when>
					<otherwise>
						DATEPART(MONTH, A.dt) AS dt,
					</otherwise>
				</choose>
				(SELECT 
					LOCATIONNAME  
				FROM DSP_LOCATION 
				WHERE LOCATIONID = ISNULL(B.LINEID, #{line})) AS LINEID,
				ISNULL(SUM(C.PROD_QTY),0) AS PROD_QTY
			FROM CheckDayOff A 
			LEFT JOIN DSP_WORKDAILY_REPORT B 
			ON B.WORK_DATE =A.dt
				AND B.LINEID = #{line}
				AND B.ISUSABLE ='Usable'
				AND B.MATERIALID = #{material}
			LEFT JOIN DSP_WORK_CONTENTS C 
			ON B.DATASEQ =C.WORKDAILY_SEQ
				AND C.ISUSABLE ='Usable'
			LEFT JOIN DSP_NOTOPERATE_CONTENTS D
			ON B.DATASEQ =D.WORKDAILY_SEQ
				AND D.ISUSABLE ='Usable'
			WHERE 1=1
			<choose>
				<when test='month == "day"'>
					AND A.dt BETWEEN CONVERT(VARCHAR(8), DATEADD(DAY,-5,GETDATE()),112) AND CONVERT(VARCHAR(8), DATEADD(DAY, 0, GETDATE()),112)
				</when>
				<when test='month == "week"'>
					AND A.dt BETWEEN CONVERT(VARCHAR(8),DATEADD(DAY, 1 - DATEPART(DW, CONVERT(DATE,GETDATE()-35)) , CONVERT(DATE,GETDATE()-35)),112) 
								 AND CONVERT(VARCHAR(8),DATEADD(DAY, 7 - DATEPART(DW, CONVERT(DATE,GETDATE())) , CONVERT(DATE,GETDATE())),112)	
				</when>
				<otherwise>
					AND A.dt BETWEEN DATEADD(MONTH , DATEDIFF(MONTH, 0, GETDATE()) -5, 0) AND DATEADD(MS, 0, DATEADD(WK, DATEDIFF(WK, 0, GETDATE())+1, 0))
				</otherwise>
			</choose>
			GROUP BY A.dt,B.LINEID, C.WORKTIME_FROM, C.WORKTIME_TO, D.NOTOPERATETIME_FROM, D.NOTOPERATETIME_TO
		) E
		GROUP BY E.dt, E.LINEID
		ORDER BY E.dt ASC
	</select>
	
	<select id="chart2" parameterType="FairProd" resultType="FairProd">
		SELECT 
			E.dt,
			E.LINEID,
			SUM(E.PROD_QTY) AS PROD_QTY
		FROM (
			SELECT 
				<choose>
					<when test='month == "day"'>
						A.dt AS dt,
					</when>
					<when test='month == "week"'>
						CAST(CONCAT(DATEPART( MONTH, DATEADD( DAY, ( ( 7 - DATEPART( WEEKDAY, A.dt ) ) % 7 ) - 3, A.dt ) ), '0',( DATEPART( DAY, DATEADD( DAY, ( ( 7 - DATEPART( WEEKDAY, A.dt) ) % 7 ) - 3, A.dt ) ) - 1 ) / 7 + 1) AS INT) AS dt,
					</when>
					<otherwise>
						DATEPART(MONTH, A.dt) AS dt,
					</otherwise>
				</choose>
				(SELECT 
					LOCATIONNAME  
				FROM DSP_LOCATION 
				WHERE LOCATIONID = ISNULL(B.LINEID, #{line})) AS LINEID,
				ISNULL(SUM(C.PROD_QTY),0) AS PROD_QTY
			FROM CheckDayOff A 
			LEFT JOIN DSP_WORKDAILY_REPORT B 
			ON B.WORK_DATE =A.dt
				AND B.LINEID = #{line}
				AND B.ISUSABLE ='Usable'
			LEFT JOIN DSP_WORK_CONTENTS C 
			ON B.DATASEQ =C.WORKDAILY_SEQ
				AND C.ISUSABLE ='Usable'
			LEFT JOIN DSP_NOTOPERATE_CONTENTS D
			ON B.DATASEQ =D.WORKDAILY_SEQ
				AND D.ISUSABLE ='Usable'
			WHERE 1=1
			<choose>
				<when test='month == "day"'>
					AND A.dt BETWEEN CONVERT(VARCHAR(8), DATEADD(DAY,-5,GETDATE()),112) AND CONVERT(VARCHAR(8), DATEADD(DAY, 0, GETDATE()),112)
				</when>
				<when test='month == "week"'>
					AND A.dt BETWEEN CONVERT(VARCHAR(8),DATEADD(DAY, 1 - DATEPART(DW, CONVERT(DATE,GETDATE()-35)) , CONVERT(DATE,GETDATE()-35)),112) 
								 AND CONVERT(VARCHAR(8),DATEADD(DAY, 7 - DATEPART(DW, CONVERT(DATE,GETDATE())) , CONVERT(DATE,GETDATE())),112)	
				</when>
				<otherwise>
					AND A.dt BETWEEN DATEADD(MONTH , DATEDIFF(MONTH, 0, GETDATE()) -5, 0) AND DATEADD(MS, 0, DATEADD(WK, DATEDIFF(WK, 0, GETDATE())+1, 0))
				</otherwise>
			</choose>
			GROUP BY A.dt,B.LINEID, C.WORKTIME_FROM, C.WORKTIME_TO, D.NOTOPERATETIME_FROM, D.NOTOPERATETIME_TO
		) E
		GROUP BY E.dt, E.LINEID
		ORDER BY E.dt ASC
	</select>
	
	<select id="chart3" parameterType="FairProd" resultType="FairProd">
		SELECT AA.REJECT_ITEMID, AA.COMM_GRP_CD_NM, ISNULL(SUM(BB.FIRSTTIME_REJECT_QTY_SUM),'0') AS FIRSTTIME_REJECT_QTY_SUM
		FROM 
		(
		   SELECT 
		   COMM_GRP_CD AS REJECT_ITEMID
		   , (SELECT COMM_GRP_CD_NM FROM SC_COMM_GRP_CD WHERE COMM_GRP_CD = A.COMM_GRP_CD ) AS COMM_GRP_CD_NM
		   , COMM_CD AS REJECT_TYPE
		   , COMM_CD_NM
		   FROM SC_COMM_CD A
		   WHERE A.COMM_GRP_CD IN ('RI01','RI02','RI03','RI04')
		) AA
		LEFT JOIN
		(
		   SELECT DATEPART(MONTH, A.WORK_DATE) AS dt, B.REJECT_ITEMID, B.REJECT_TYPE , ISNULL(SUM(B.FIRSTTIME_REJECT_QTY),'0') AS FIRSTTIME_REJECT_QTY_SUM
		   FROM DSP_WORKDAILY_REPORT A 
		   JOIN DSP_REJECT_CONTENTS B ON A.DATASEQ = B.WORKDAILY_SEQ
		   WHERE DATEPART(MONTH, A.WORK_DATE) = #{month} AND A.WORK_DATE BETWEEN DATEADD(MONTH , DATEDIFF(MONTH, 0, GETDATE()) -5, 0) AND DATEADD(MS, -3, DATEADD(WK, DATEDIFF(WK, 0, GETDATE()) +1, 0))
		   AND A.FACTORYID = #{plant}
		   AND A.MATERIALID = #{material}
		   GROUP BY B.REJECT_ITEMID, B.REJECT_TYPE, DATEPART(MONTH, A.WORK_DATE)
		) BB ON AA.REJECT_ITEMID = BB.REJECT_ITEMID AND AA.REJECT_TYPE = BB.REJECT_TYPE
		GROUP BY AA.REJECT_ITEMID, AA.COMM_GRP_CD_NM
		ORDER BY AA.REJECT_ITEMID ASC
	</select>
		
	<select id="chart4" parameterType="FairProd" resultType="FairProd">
		SELECT BB.dt,AA.REJECT_ITEMID, AA.REJECT_TYPE, AA.COMM_CD_NM, AA.COMM_GRP_CD_NM, ISNULL(SUM(BB.FIRSTTIME_REJECT_QTY_SUM),'0') AS FIRSTTIME_REJECT_QTY_SUM
		FROM 
		(
		   SELECT 
		   COMM_GRP_CD AS REJECT_ITEMID
		   , (SELECT COMM_GRP_CD_NM FROM SC_COMM_GRP_CD WHERE COMM_GRP_CD = A.COMM_GRP_CD ) AS COMM_GRP_CD_NM
		   , COMM_CD AS REJECT_TYPE
		   , COMM_CD_NM
		   FROM SC_COMM_CD A
		   WHERE A.COMM_GRP_CD IN ('RI01','RI02','RI03','RI04')
		) AA
		LEFT JOIN
		(
		   SELECT DATEPART(MONTH, A.WORK_DATE) AS dt, B.REJECT_ITEMID, B.REJECT_TYPE , ISNULL(SUM(B.FIRSTTIME_REJECT_QTY),'0') AS FIRSTTIME_REJECT_QTY_SUM
		   FROM DSP_WORKDAILY_REPORT A 
		   JOIN DSP_REJECT_CONTENTS B ON A.DATASEQ = B.WORKDAILY_SEQ
		   WHERE DATEPART(MONTH, A.WORK_DATE) = #{month} AND A.WORK_DATE BETWEEN DATEADD(MONTH , DATEDIFF(MONTH, 0, GETDATE()) -5, 0) AND DATEADD(MS, -3, DATEADD(WK, DATEDIFF(WK, 0, GETDATE()) +1, 0))
		   AND A.FACTORYID = #{plant}
		   AND A.MATERIALID = #{material}
		   GROUP BY B.REJECT_ITEMID, B.REJECT_TYPE, DATEPART(MONTH, A.WORK_DATE)
		) BB ON AA.REJECT_ITEMID = BB.REJECT_ITEMID AND AA.REJECT_TYPE = BB.REJECT_TYPE
		GROUP BY AA.REJECT_ITEMID, AA.COMM_CD_NM, AA.COMM_GRP_CD_NM, AA.REJECT_TYPE, BB.dt
    </select>
    
    <select id="chart5" parameterType="FairProd" resultType="FairProd">
		SELECT 
			R.dt,
			R.LOCATIONNAME,
			ROUND(CASE 
				WHEN convert(float, (R.WORKTOTAL + R.NOTOPERATETOTAL)) = 0 THEN ROUND((convert(float, R.WORKTOTAL) / 1), 4)*100
				ELSE ROUND((convert(float, R.WORKTOTAL) / convert(float, (R.WORKTOTAL + R.NOTOPERATETOTAL))), 4)*100
			END, 2) AS TOTAL
		FROM (
			SELECT 
			    S.dt AS dt,
			    (SELECT 
					LOCATIONNAME  
				FROM DSP_LOCATION 
				WHERE LOCATIONID = #{line}) AS LOCATIONNAME,
			    SUM(S.WORKTOTAL) AS WORKTOTAL,
			    SUM(S.NOTOPERATETOTAL) AS NOTOPERATETOTAL
			FROM (
			    SELECT 
			        <choose>
						<when test='month == "day"'>
							A.dt AS dt,
						</when>
						<when test='month == "week"'>
							CAST(CONCAT(DATEPART( MONTH, DATEADD( DAY, ( ( 7 - DATEPART( WEEKDAY, A.dt ) ) % 7 ) - 3, A.dt ) ), '0',( DATEPART( DAY, DATEADD( DAY, ( ( 7 - DATEPART( WEEKDAY, A.dt) ) % 7 ) - 3, A.dt ) ) - 1 ) / 7 + 1) AS INT) AS dt,
						</when>
						<otherwise>
							DATEPART(MONTH, A.dt) AS dt,
						</otherwise>
					</choose>
			        ISNULL(SUM(CASE 
			            WHEN (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*3600 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,5,2) AS INT)) &lt;= (CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*3600 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,5,2) AS INT)) 
			            THEN ((CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*3600 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,5,2) AS INT)) - (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*3600 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,5,2) AS INT)))
			            ELSE ((CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*3600 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,5,2) AS INT)) + (86400 - (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*3600 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,5,2) AS INT))))
			        END), 0) AS WORKTOTAL,
			        0 AS NOTOPERATETOTAL
			    FROM CheckDayOff A 
			    LEFT JOIN DSP_WORKDAILY_REPORT B 
			        ON B.WORK_DATE = A.dt
			        AND B.LINEID = #{line}
			        AND B.ISUSABLE = 'Usable'
			        AND B.MATERIALID = #{material}
			    LEFT JOIN DSP_WORK_CONTENTS C 
			        ON B.DATASEQ = C.WORKDAILY_SEQ
			        AND C.ISUSABLE = 'Usable'
			        AND C.WORKTIME_FROM IS NOT NULL	
			        AND C.WORKTIME_TO IS NOT NULL	
			    WHERE 1 = 1
			    <choose>
					<when test='month == "day"'>
						AND A.dt BETWEEN CONVERT(VARCHAR(8), DATEADD(DAY,-5,GETDATE()),112) AND CONVERT(VARCHAR(8), DATEADD(DAY, 0, GETDATE()),112)
					</when>
					<when test='month == "week"'>
						AND A.dt BETWEEN CONVERT(VARCHAR(8),DATEADD(DAY, 1 - DATEPART(DW, CONVERT(DATE,GETDATE()-35)) , CONVERT(DATE,GETDATE()-35)),112) 
									 AND CONVERT(VARCHAR(8),DATEADD(DAY, 7 - DATEPART(DW, CONVERT(DATE,GETDATE())) , CONVERT(DATE,GETDATE())),112)	
					</when>
					<otherwise>
						AND A.dt BETWEEN DATEADD(MONTH , DATEDIFF(MONTH, 0, GETDATE()) -5, 0) AND DATEADD(MS, 0, DATEADD(WK, DATEDIFF(WK, 0, GETDATE()), 0))
					</otherwise>
				</choose>
			    GROUP BY A.dt 
			
			    UNION
			
			    SELECT 
			        <choose>
						<when test='month == "day"'>
							A.dt AS dt,
						</when>
						<when test='month == "week"'>
							CAST(CONCAT(DATEPART( MONTH, DATEADD( DAY, ( ( 7 - DATEPART( WEEKDAY, A.dt ) ) % 7 ) - 3, A.dt ) ), '0',( DATEPART( DAY, DATEADD( DAY, ( ( 7 - DATEPART( WEEKDAY, A.dt) ) % 7 ) - 3, A.dt ) ) - 1 ) / 7 + 1) AS INT) AS dt,
						</when>
						<otherwise>
							DATEPART(MONTH, A.dt) AS dt,
						</otherwise>
					</choose>
			        0 AS WORKTOTAL,
			        ISNULL(SUM(CASE 
			            WHEN (CAST(SUBSTRING(D.NOTOPERATETIME_FROM,1,2) AS INT)*3600 + CAST(SUBSTRING(D.NOTOPERATETIME_FROM,3,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_FROM,5,2) AS INT)) &lt;= (CAST(SUBSTRING(D.NOTOPERATETIME_TO,1,2) AS INT)*3600 + CAST(SUBSTRING(D.NOTOPERATETIME_TO,3,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_TO,5,2) AS INT)) 
			            THEN ((CAST(SUBSTRING(D.NOTOPERATETIME_TO,1,2) AS INT)*3600 + CAST(SUBSTRING(D.NOTOPERATETIME_TO,3,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_TO,5,2) AS INT)) - (CAST(SUBSTRING(D.NOTOPERATETIME_FROM,1,2) AS INT)*3600 + CAST(SUBSTRING(D.NOTOPERATETIME_FROM,3,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_FROM,5,2) AS INT)))
			            ELSE ((CAST(SUBSTRING(D.NOTOPERATETIME_TO,1,2) AS INT)*3600 + CAST(SUBSTRING(D.NOTOPERATETIME_TO,3,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_TO,5,2) AS INT)) + (86400 - (CAST(SUBSTRING(D.NOTOPERATETIME_FROM,1,2) AS INT)*3600 + CAST(SUBSTRING(D.NOTOPERATETIME_FROM,3,2) AS INT)*60 + CAST(SUBSTRING(D.NOTOPERATETIME_FROM,5,2) AS INT))))
			        END), 0) AS NOTOPERATETOTAL
			    FROM CheckDayOff A 
			    LEFT JOIN DSP_WORKDAILY_REPORT B 
			        ON B.WORK_DATE = A.dt
			        AND B.LINEID = #{line}
			        AND B.ISUSABLE = 'Usable'
			        AND B.MATERIALID = #{material}
			    LEFT JOIN DSP_NOTOPERATE_CONTENTS D
			        ON B.DATASEQ = D.WORKDAILY_SEQ
			        AND D.ISUSABLE = 'Usable'
			    WHERE 1 = 1
			    <choose>
					<when test='month == "day"'>
						AND A.dt BETWEEN CONVERT(VARCHAR(8), DATEADD(DAY,-5,GETDATE()),112) AND CONVERT(VARCHAR(8), DATEADD(DAY, 0, GETDATE()),112)
					</when>
					<when test='month == "week"'>
						AND A.dt BETWEEN CONVERT(VARCHAR(8),DATEADD(DAY, 1 - DATEPART(DW, CONVERT(DATE,GETDATE()-35)) , CONVERT(DATE,GETDATE()-35)),112) 
									 AND CONVERT(VARCHAR(8),DATEADD(DAY, 7 - DATEPART(DW, CONVERT(DATE,GETDATE())) , CONVERT(DATE,GETDATE())),112)	
					</when>
					<otherwise>
						AND A.dt BETWEEN DATEADD(MONTH , DATEDIFF(MONTH, 0, GETDATE()) -5, 0) AND DATEADD(MS, 0, DATEADD(WK, DATEDIFF(WK, 0, GETDATE())+1, 0))
					</otherwise>
				</choose>
			    GROUP BY A.dt 
			) AS S
			GROUP BY S.dt		
			) R
		ORDER BY R.dt ASC
	</select>
    
	<select id="chart6" parameterType="FairProd" resultType="FairProd">
			SELECT 
				D.dt,
				SUM(ISNULL(D.PLAN_QTY, 0)) AS PLAN_QTY, 
				SUM(ISNULL(D.PROD_QTY, 0)) AS PROD_QTY
			FROM (
				SELECT
					<choose>
						<when test='month == "day"'>
							A.dt AS dt,
						</when>
						<when test='month == "week"'>
							CAST(CONCAT(DATEPART( MONTH, DATEADD( DAY, ( ( 7 - DATEPART( WEEKDAY, A.dt ) ) % 7 ) - 3, A.dt ) ), '0',( DATEPART( DAY, DATEADD( DAY, ( ( 7 - DATEPART( WEEKDAY, A.dt) ) % 7 ) - 3, A.dt ) ) - 1 ) / 7 + 1) AS INT) AS dt,
						</when>
						<otherwise>
							DATEPART(MONTH, A.dt) AS dt,
						</otherwise>
					</choose>
					B.PLAN_QTY,
					SUM(C.PROD_QTY) AS PROD_QTY 
				FROM CheckDayOff A
				LEFT JOIN DSP_WORKDAILY_REPORT B
				ON A.dt = B.WORK_DATE 
					AND B.FACTORYID = #{plant}
					AND B.MATERIALID = #{material}
					AND B.LINEID = (SELECT TOP 1
									LOCATIONID
									FROM DSP_LOCATION
									WHERE FACTORYID = #{plant}
									AND ISUSABLE = 'Y'
									ORDER BY LOCATIONID DESC
									)
					AND B.ISUSABLE = 'Usable'
				LEFT JOIN DSP_WORK_CONTENTS C
				ON B.DATASEQ = C.WORKDAILY_SEQ
					AND C.ISUSABLE = 'Usable'
				WHERE 1=1
					<choose>
						<when test='month == "day"'>
							AND A.dt BETWEEN CONVERT(VARCHAR(8), DATEADD(DAY,-5,GETDATE()),112) AND CONVERT(VARCHAR(8), DATEADD(DAY, 0, GETDATE()),112)
						</when>
						<when test='month == "week"'>
							AND A.dt BETWEEN CONVERT(VARCHAR(8),DATEADD(DAY, 1 - DATEPART(DW, CONVERT(DATE,GETDATE()-35)) , CONVERT(DATE,GETDATE()-35)),112) 
										 AND CONVERT(VARCHAR(8),DATEADD(DAY, 7 - DATEPART(DW, CONVERT(DATE,GETDATE())) , CONVERT(DATE,GETDATE())),112)	
						</when>
						<otherwise>
							AND A.dt BETWEEN DATEADD(MONTH , DATEDIFF(MONTH, -1, GETDATE()) -5, 0) AND DATEADD(MS, -3, DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE())+1, 0))
						</otherwise>
					</choose>
				GROUP BY A.dt, B.DATASEQ, B.PLAN_QTY
			) D
			GROUP BY D.dt
			ORDER BY D.dt ASC
	</select>			

    <select id="find1Alarm" resultType="String">
		SELECT COUNT(*)
        FROM DSP_ANOMALYDETECT_NOTICE as A
        WHERE 1=1
        	AND NOTICE_REASON = 'UNDER-PRODUCTION'
        	AND FORMAT(NOTICE_DATETIME,'yyyy-MM-dd') = (FORMAT(GETDATE(),'yyyy-MM-dd'))
        	AND ISUSABLE = 'Usable'
	</select>
	
	<select id="find1AlarmConfirm" resultType="String">
       	SELECT COUNT(*)
        FROM DSP_ANOMALYDETECT_NOTICE A
        JOIN DSP_ANOMALYDETECT_CONFIRM B
        	ON A.NOTICEID = B.CONFIRMID
        	AND A.NOTICE_REASON = B.CONFIRM_REASON
        WHERE 1=1
        	AND B.CONFIRM_REASON = 'UNDER-PRODUCTION'
        	AND FORMAT(A.NOTICE_DATETIME,'yyyy-MM-dd') = (FORMAT(GETDATE(),'yyyy-MM-dd'))
        	AND A.FACTORYID = B.FACTORYID
        	AND A.ISUSABLE = B.ISUSABLE
        	AND A.ISUSABLE = 'Usable'
	</select>
    
	<select id="find2Alarm" resultType="String">
		SELECT COUNT(*)
        FROM DSP_ANOMALYDETECT_NOTICE as A
        WHERE 1=1
        	AND NOTICE_REASON = 'DEFECT-RATE'
        	AND FORMAT(NOTICE_DATETIME,'yyyy-MM-dd') = (FORMAT(GETDATE(),'yyyy-MM-dd'))
        	AND ISUSABLE = 'Usable'
    </select>   
    
	<select id="find2AlarmConfirm" resultType="String">
       	SELECT COUNT(*)
        FROM DSP_ANOMALYDETECT_NOTICE A
        JOIN DSP_ANOMALYDETECT_CONFIRM B
        	ON A.NOTICEID = B.CONFIRMID
        	AND A.NOTICE_REASON = B.CONFIRM_REASON
        WHERE 1=1
        	AND B.CONFIRM_REASON = 'DEFECT-RATE'
        	AND FORMAT(A.NOTICE_DATETIME,'yyyy-MM-dd') = (FORMAT(GETDATE(),'yyyy-MM-dd'))
        	AND A.FACTORYID = B.FACTORYID
        	AND A.ISUSABLE = B.ISUSABLE
        	AND A.ISUSABLE = 'Usable'
    </select>     
    
	<select id="find3Alarm" resultType="String">
		SELECT COUNT(*)
        FROM DSP_ANOMALYDETECT_NOTICE as A
        WHERE 1=1
        	AND NOTICE_REASON = 'NOTOPERATE-PRESS'
        	AND FORMAT(NOTICE_DATETIME,'yyyy-MM-dd') = (FORMAT(GETDATE(),'yyyy-MM-dd'))
        	AND ISUSABLE = 'Usable'
    </select>  
    
	<select id="find3AlarmConfirm" resultType="String">
       	SELECT COUNT(*)
        FROM DSP_ANOMALYDETECT_NOTICE A
        JOIN DSP_ANOMALYDETECT_CONFIRM B
        	ON A.NOTICEID = B.CONFIRMID
        	AND A.NOTICE_REASON = B.CONFIRM_REASON
        WHERE 1=1
        	AND B.CONFIRM_REASON = 'NOTOPERATE-PRESS'
        	AND FORMAT(A.NOTICE_DATETIME,'yyyy-MM-dd') = (FORMAT(GETDATE(),'yyyy-MM-dd'))
        	AND A.FACTORYID = B.FACTORYID
        	AND A.ISUSABLE = B.ISUSABLE
        	AND A.ISUSABLE = 'Usable'
    </select>     

	<select id="findAllDailyAlarm" parameterType="FairProd" resultType="FairProd">
		SELECT 
			B.DATE AS DATE,
			SUM(B.COUNT) AS SUM
		FROM (
			SELECT FORMAT(A.NOTICE_DATETIME,'yyyy-MM-dd') AS DATE,
				COUNT(*) as COUNT
	        FROM DSP_ANOMALYDETECT_NOTICE as A
	        WHERE 1=1
	        	AND FORMAT(NOTICE_DATETIME,'yyyy-MM-dd') IN (
	        												FORMAT(GETDATE(),'yyyy-MM-dd'),
	        												FORMAT(GETDATE() -1,'yyyy-MM-dd')
	        	)
	        	AND FACTORYID = 'KEM'
	        	AND ISUSABLE = 'Usable'
	        GROUP BY FORMAT(NOTICE_DATETIME,'yyyy-MM-dd') 	
	    ) B
	    GROUP BY B.DATE
    </select>
    
</mapper>