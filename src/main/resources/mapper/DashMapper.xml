<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.idr.pdd.mapper.DashMapper">

	<select id="findAllPQCD" parameterType="Dash" resultType="Dash">
        SELECT
		    D.WORK_DATE,
			SUM(D.PROD_QTY) AS PROD_QTY, 
		    SUM(D.FIRSTTIME_FAIL_QTY) AS FIRSTTIME_FAIL_QTY,
		    SUM(D.MANHOUR) AS MANHOUR,
		    SUM(D.PLAN_QTY) AS PLAN_QTY,
		    SUM(D.WORKTOTAL) AS WORKTIME,
			SUM(D.NOTOPERATETOTAL) AS NOTOPERATETIME
		FROM (
				SELECT  DISTINCT 
						B.WORK_DATE,
						C.PROD_QTY AS PROD_QTY,
						C.FIRSTTIME_FAIL_QTY AS FIRSTTIME_FAIL_QTY,
						C.MANHOUR AS MANHOUR,
						B.PLAN_QTY AS PLAN_QTY,
						CASE 
				          WHEN (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT)) &lt;= (CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)) 
				          THEN ((CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)) - (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT)))
				          ELSE ((CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)) + (1440 - (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT))))
				       	END AS WORKTOTAL,
						
				       	CASE 
				          WHEN (CAST(SUBSTRING(A.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_FROM,3,2) AS INT)) &lt;= (CAST(SUBSTRING(A.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_TO,3,2) AS INT)) 
				          THEN ((CAST(SUBSTRING(A.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_TO,3,2) AS INT)) - (CAST(SUBSTRING(A.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_FROM,3,2) AS INT)))
				          ELSE ((CAST(SUBSTRING(A.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_TO,3,2) AS INT)) + (1440 - (CAST(SUBSTRING(A.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_FROM,3,2) AS INT))))
				       	END AS NOTOPERATETOTAL
				FROM DSP_NOTOPERATE_CONTENTS A
				JOIN DSP_WORKDAILY_REPORT B
				ON B.DATASEQ = A.WORKDAILY_SEQ 
				AND B.FACTORYID = 'KEM'
				AND B.ISUSABLE = 'USABLE'
				AND A.ISUSABLE = 'USABLE'
				JOIN DSP_WORK_CONTENTS C
				ON B.DATASEQ = C.WORKDAILY_SEQ
				AND C.ISUSABLE = 'USABLE'
			) D	
		WHERE  D.WORK_DATE IN (
		    				CONVERT(DATE, GETDATE(), 112)
		    				,CONVERT(DATE, GETDATE()-1, 112)
		    )
		GROUP BY D.WORK_DATE
    </select>

	<select id="findAllR" parameterType="RejectContents" resultType="RejectContents">
        SELECT 
        	A.REJECT_ITEMID,
        	A.REJECT_TYPE,
        	SUM(A.FIRSTTIME_REJECT_QTY) AS FIRSTTIME_REJECT_QTY
        FROM DSP_REJECT_CONTENTS A
        JOIN DSP_WORKDAILY_REPORT B
        ON B.DATASEQ=A.WORKDAILY_SEQ
			AND B.FACTORYID ='KEM'
			AND B.ISUSABLE ='Usable'
       		AND A.ISUSABLE = 'Usable'
       		AND DATEPART(MONTH,B.WORK_DATE) = #{month}
       	GROUP BY A.REJECT_ITEMID, REJECT_TYPE
       	ORDER BY A.REJECT_ITEMID ASC
    </select>

	<select id="rank">
		SELECT 
			R.LOCATIONID, 
			SUM(R.PROD_QTY) AS PROD_QTY
		FROM(
			SELECT 
				L.LOCATIONID, 
				ISNULL(SUM(B.PROD_QTY),0) AS PROD_QTY
			FROM
				DSP_LOCATION L
			LEFT JOIN DSP_WORKDAILY_REPORT A 
			ON L.LOCATIONID = A.LINEID
				AND A.WORK_DATE BETWEEN CONVERT(VARCHAR(8), DATEADD(DAY,-5,GETDATE()),112)
				AND CONVERT(VARCHAR(8), DATEADD(DAY, 0, GETDATE()),112)
			LEFT JOIN DSP_WORK_CONTENTS B 
			ON A.DATASEQ = B.WORKDAILY_SEQ
			WHERE
				L.FACTORYID = #{data}
				AND L.ISUSABLE='Y'
			GROUP BY L.LOCATIONID, B.PROD_QTY , A.WORK_DATE
			)R
		GROUP BY R.LOCATIONID
		ORDER BY PROD_QTY DESC, R.LOCATIONID ASC;
	</select>

	<select id="chart1" resultType="FairProd" parameterType="String">
		SELECT DISTINCT
			D.dt,
			D.LINEID,
			SUM(D.PROD_QTY) AS PROD_QTY
		FROM (
			SELECT 
				CASE
			   		WHEN 'day' = #{month} THEN A.dt 
			   		WHEN 'week' = #{month} THEN DATEPART(WEEK, A.dt)
			   		WHEN 'month' = #{month} THEN DATEPART(MONTH, A.dt)
			   	END AS dt,
				(SELECT 
					LOCATIONNAME  
				FROM DSP_LOCATION 
				WHERE LOCATIONID = ISNULL(B.LINEID,#{factory})) AS LINEID,
				ISNULL(SUM(C.PROD_QTY),0) AS PROD_QTY
			FROM CheckDayOff A 
			LEFT JOIN DSP_WORKDAILY_REPORT B 
			ON B.WORK_DATE =A.dt
				AND B.LINEID =#{factory}
			LEFT JOIN DSP_WORK_CONTENTS C 
			ON B.DATASEQ =C.WORKDAILY_SEQ
				AND C.ISUSABLE ='Usable'
			WHERE 'day'= #{month} AND A.dt BETWEEN CONVERT(VARCHAR(8), DATEADD(DAY,-5,GETDATE()),112) AND CONVERT(VARCHAR(8), DATEADD(DAY, 0, GETDATE()),112)
			OR	  'week' = #{month} AND A.dt BETWEEN DATEADD(WK, DATEDIFF(WK, 0, GETDATE()) -5, 0) AND DATEADD(MS, -3, DATEADD(WK, DATEDIFF(WK, 0, GETDATE()), 0))
			OR	  'month' = #{month} AND A.dt BETWEEN DATEADD(MONTH , DATEDIFF(MONTH, 0, GETDATE()) -5, 0) AND DATEADD(MS, -3, DATEADD(WK, DATEDIFF(WK, 0, GETDATE()) +1, 0))
	
			GROUP BY A.dt,B.LINEID, DATEPART(WEEK, A.dt), DATEPART(MONTH, A.dt)
		) D
		GROUP BY D.dt, D.LINEID
	</select>

    <select id="findAllDay" parameterType="Dash" resultType="Dash">
		SELECT 
			F.WORK_DATE,
			F.LINEID,
			SUM(F.WORKTIME) AS WORKTIME,
			SUM(F.NOTOPERATETIME) AS NOTOPERATETIME
		FROM(
	   		SELECT 	
		   		CASE
		   			WHEN 'day' = #{month} THEN DATEPART(DAY, E.WORK_DATE)
		   			WHEN 'week' = #{month} THEN DATEPART(WEEK, E.WORK_DATE)
		   			WHEN 'month' = #{month} THEN DATEPART(MONTH, E.WORK_DATE)
		   		END AS WORK_DATE
				  ,E.LINEID
				  ,SUM(E.WORKTOTAL) AS WORKTIME
				  ,SUM(E.NOTOPERATETOTAL) AS NOTOPERATETIME
			FROM(
				SELECT  DISTINCT 
						CONVERT (DATETIME, B.WORK_DATE, 112) AS WORK_DATE,
						B.LINEID AS LINEID,
						CASE 
				          WHEN (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT)) &lt;= (CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)) 
				          THEN ((CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)) - (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT)))
				          ELSE ((CAST(SUBSTRING(C.WORKTIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_TO,3,2) AS INT)) + (1440 - (CAST(SUBSTRING(C.WORKTIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(C.WORKTIME_FROM,3,2) AS INT))))
				       	END AS WORKTOTAL,
						
				       	CASE 
				          WHEN (CAST(SUBSTRING(A.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_FROM,3,2) AS INT)) &lt;= (CAST(SUBSTRING(A.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_TO,3,2) AS INT)) 
				          THEN ((CAST(SUBSTRING(A.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_TO,3,2) AS INT)) - (CAST(SUBSTRING(A.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_FROM,3,2) AS INT)))
				          ELSE ((CAST(SUBSTRING(A.NOTOPERATETIME_TO,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_TO,3,2) AS INT)) + (1440 - (CAST(SUBSTRING(A.NOTOPERATETIME_FROM,1,2) AS INT)*60 + CAST(SUBSTRING(A.NOTOPERATETIME_FROM,3,2) AS INT))))
				       	END AS NOTOPERATETOTAL
				FROM DSP_NOTOPERATE_CONTENTS A
				JOIN DSP_WORKDAILY_REPORT B
				ON B.DATASEQ = A.WORKDAILY_SEQ 
				AND B.FACTORYID = 'KEM'
				AND B.ISUSABLE = 'USABLE'
				AND A.ISUSABLE = 'USABLE'
				JOIN DSP_WORK_CONTENTS C
				ON B.DATASEQ = C.WORKDAILY_SEQ
				AND C.ISUSABLE = 'USABLE'
				JOIN DSP_LOCATION D
				ON D.LOCATIONID = B.LINEID 
			) E		
			WHERE 'day' = #{month} AND E.WORK_DATE IN (
								 DATEADD(DAY,0,FORMAT(GETDATE(), 'yyyy-MM-dd'))
								,DATEADD(DAY,-1,FORMAT(GETDATE(), 'yyyy-MM-dd'))
								,DATEADD(DAY,-2,FORMAT(GETDATE(), 'yyyy-MM-dd'))
								,DATEADD(DAY,-3,FORMAT(GETDATE(), 'yyyy-MM-dd'))
								,DATEADD(DAY,-4,FORMAT(GETDATE(), 'yyyy-MM-dd'))
								,DATEADD(DAY,-5,FORMAT(GETDATE(), 'yyyy-MM-dd'))
								)
			OR	  'week' = #{month} AND E.WORK_DATE BETWEEN DATEADD(WK, DATEDIFF(WK, 0, GETDATE()) -5, 0) 
								AND DATEADD(MS, -3, DATEADD(WK, DATEDIFF(WK, 0, GETDATE()) +1, 0))
			OR	  'month' = #{month} AND E.WORK_DATE BETWEEN DATEADD(MONTH , DATEDIFF(MONTH, 0, GETDATE()) -5, 0) 
								AND DATEADD(MS, -3, DATEADD(WK, DATEDIFF(WK, 0, GETDATE()) +1, 0))
								
			GROUP BY DATEPART(DAY, E.WORK_DATE), DATEPART(WEEK, E.WORK_DATE), DATEPART(MONTH, E.WORK_DATE), E.LINEID
			) F
		GROUP BY F.WORK_DATE, F.LINEID
	</select>


</mapper>